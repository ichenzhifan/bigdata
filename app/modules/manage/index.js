// Generated by CoffeeScript 1.7.1
"use strict"
module.exports = angular.module("manage", []).config([
  "$stateProvider", "$urlRouterProvider", ($stateProvider, $urlRouterProvider) => {
     $stateProvider.state("dashboard.manage", {
      url: "/manage",
      views:{
        'func':{
           controller:'ManageCtrl',
           templateUrl: "modules/manage/views/manage.html",
        }
      }
    })
    .state("dashboard.manage.user",{
      url:"/user",
      views:{
        'manage':{
          controller:'ManageContentCtrl',
          templateUrl: "modules/manage/views/content.html"
        }
      },
      params:{
        param:null 
      }
    })
    .state("dashboard.manage.group",{
      url:"/group",
      views:{
        'manage':{
          controller:'ManageContentCtrl',
          templateUrl: "modules/manage/views/content.html"
        }
      },
      params:{
        param:null 
      }
    })
    .state("dashboard.manage.authority",{
      url:"/authority",
      views:{
        'manage':{
          controller:'ManageContentCtrl',
          templateUrl: "modules/manage/views/content.html"
        }
      },
      params:{
        param:null 
      }
    })
  }
]) 
.constant('userMock',require('./mock/user.mock'))
/**
 * @ngdoc controller
 * @name manage.controller:ManageCtrl
 * @description
 * /manage路径对应的控制器,监听changeCurApp事件
 * @requires dashboard.service:dashboardService
 * @property {Object} menutree 管理页面的菜单
 */
.controller('ManageCtrl', require('./controllers/manage'))
/**
 * @ngdoc controller
 * @name manage.controller:ManageContentCtrl
 * @description
 * /manage/[user|group|authority]路径对应的控制器
 * @requires dashboard.service:dashboardService
 * @property {Object} menutree 管理页面的菜单
 */
.controller('ManageContentCtrl', require('./controllers/manage.content')) 
/**
 * @ngdoc controller
 * @name manage.controller:userEditCtrl
 * @description
 * 用户信息编辑页面控制器
 * @requires manage.service.userResourceService
 * @requires dashboard.service:dashboardService
 * @property {Object} user 用户信息
 * @property {Array} group 用户组列表
 */
.controller('userEditCtrl', require('./controllers/user/user.edit'))
/**
 * @ngdoc controller
 * @name manage.controller:userAddCtrl
 * @description
 * 用户新增页面控制器
 * @requires manage.service.userResourceService
 * @requires dashboard.service:dashboardService
 * @requires common.service:Notification
 * @property {Object} user 要新增的用户
 * @property {Array} group 用户组列表
 */
.controller('userAddCtrl', require('./controllers/user/user.add'))
/**
 * @ngdoc controller
 * @name manage.controller:userDelCtrl
 * @description
 * 用户锁定状态修改页面控制器
 * @requires manage.service.userResourceService
 * @requires common.service:Notification
 * @property {String} title 提示信息
 */
.controller('userDelCtrl', require('./controllers/user/user.del'))
/**
 * @ngdoc controller
 * @name manage.controller:userInfoCtrl
 * @description
 * 用户权限编辑页面控制器
 * @requires manage.service.userResourceService
 * @requires manage.service:utilManageService
 * @requires common.service:Notification
 * @property {Array} AuthorityData 权限信息
 */
.controller('userInfoCtrl', require('./controllers/user/user.info'))
.controller('groupEditCtrl', require('./controllers/group/group.edit')) 
.controller('groupAddCtrl', require('./controllers/group/group.add'))
.controller('groupDelCtrl', require('./controllers/group/group.del'))
.controller('groupAuthorityCtrl', require('./controllers/group/group.authority'))
.controller('authorityEditCtrl', require('./controllers/authority/authority.edit')) 
.controller('authorityAddCtrl', require('./controllers/authority/authority.add'))
.controller('authorityAddRootCtrl', require('./controllers/authority/authority.add.root'))
.controller('authorityDelCtrl', require('./controllers/authority/authority.del'))
.controller('authorityGroupCtrl', require('./controllers/authority/authority.group'))
.controller('authorityUserCtrl', require('./controllers/authority/authority.user'))
.directive('userManage', require('./directives/user/user.manage'))
.directive('groupManage', require('./directives/group/group.manage')) 
.directive('authorityManage', require('./directives/authority/authority.manage')) 
.directive('iconSelect', require('./directives/icon.select')) 
/**
 * @ngdoc service
 * @name manage.service:userManageService
 * @description
 * 用户新增,信息编辑,权限编辑服务
 * @requires manage.service.userResourceService
 */
.factory('userManageService',require('./services/user/user.manage'))
/**
 * @ngdoc service
 * @name manage.service:userResourceService
 * @description
 * 用户相关接口服务
 * @requires common.service.MobileService
 */
.factory('userResourceService',require('./services/user/user.resource'))
/**
 * @ngdoc service
 * @name manage.service:groupManageService
 * @description
 * 群组新增,信息编辑,权限编辑服务
 * @requires manage.service.groupResourceService
 */
.factory('groupManageService',require('./services/group/group.manage')) 
/**
 * @ngdoc service
 * @name manage.service:groupResourceService
 * @description
 * 群组相关接口服务
 * @requires common.service.MobileService
 */
.factory('groupResourceService',require('./services/group/group.resource'))
/**
 * @ngdoc service
 * @name manage.service:authorityManageService
 * @description
 * 权限新增,信息编辑,用户指派,群组指派服务
 * @requires manage.service.authorityResourceService
 */
.factory('authorityManageService',require('./services/authority/authority.manage')) 
/**
 * @ngdoc service
 * @name manage.service:authorityResourceService
 * @description
 * 权限相关接口服务
 * @requires common.service.MobileService
 */
.factory('authorityResourceService',require('./services/authority/authority.resource')) 
.factory('utilManageService',require('./services/util.manage'))
.filter('userFilter',require('./filters/user.filter'))
.filter('groupFilter',require('./filters/group.filter'))

